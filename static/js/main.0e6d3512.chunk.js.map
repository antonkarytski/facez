{"version":3,"sources":["features/facesBuildZone/BuildZone/style.module.scss","features/showZone/style.module.scss","style.module.scss","pages/AdminPage/style.module.scss","features/facesBuildZone/DropZone/style.module.scss","ui/buttons/styles.module.scss","api/request.ts","api/links.ts","api/request.getFaces.ts","features/faces/model.faces.ts","features/faces/helpers.ts","lib/asyncFileReader/readFile.ts","lib/helpers/objects.ts","lib/helpers/iNode.ts","features/facesBuildZone/helper.ts","features/facesBuildZone/model.cache.ts","features/facesBuildZone/DropZone/FacesDropZone.tsx","lib/helpers/getMeasure.ts","features/svgBuilder/SvgBuilder.tsx","ui/buttons/Button.tsx","features/facesBuildZone/BuildZone/FacesBuildZone.tsx","pages/AdminPage/AdminPage.tsx","features/showZone/FacesShowZone.tsx","pages/MainPage.tsx","App.tsx","features/faces/hook.ts","index.tsx"],"names":["module","exports","request","a","url","method","body","token","headers","Authorization","data","JSON","stringify","console","log","fetch","response","ok","json","links","assets","getFaces","createEffect","fail","watch","e","setFaces","createEvent","addFace","$faces","createStore","on","_","payload","map","node","rest","parse","fromCachedFace","state","defaultFileOptions","driver","readFile","file","options","fileReader","FileReader","Promise","resolve","reject","onloadend","target","result","onerror","error","readAsText","readAsDataURL","readAsBinaryString","readAsArrayBuffer","replaceKeys","source","Object","entries","reduce","acc","search","replacement","copy","replaceKey","forINodeTree","handler","children","prepareSvgColor","svgString","colorsList","stylesString","match","colors","matchAll","value","className","color","findColors","withoutStyles","replace","accum","replaceAll","replaceStyles","convertMap","class","prepareSvgJson","startNode","attributes","uniqKey","nanoid","addNewFaceToCache","addFaceUpdateToCache","addFaceDeleteToCache","resetCache","$facesCache","toCachedFace","_delete","_id","newState","reset","sendCache","attach","mapParams","cache","effect","length","FacesDropZone","onDrop","useCallback","acceptedFiles","withColors","svgJson","preparedSvg","face","offset","x","y","scale","rotation","useDropzone","getRootProps","getInputProps","isDragActive","classes","Container","getMeasure","size","measure","toString","getValue","SvgBuilder","React","memo","childNode","svgProps","props","style","sizes","width","height","createElement","name","filter","type","prev","next","Button","label","onClick","cx","FacesBuildZone","faces","useStore","useState","isScaleBlocked","setIsScaleBlocked","currentScale","setCurrentScale","SaveButton","disabled","minScale","limitToBounds","onZoomStop","wrapperClass","ResizeComponent","onStart","onStop","onMoveStop","defaultPosition","Element","AdminPage","FacesShowZone","initialScale","centerOnInit","centerZoomedOut","FaceWrap","transform","MainPage","App","location","useLocation","useEffect","then","catch","path","exact","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.0e6d3512.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__2Rh7b\",\"ResizeComponent\":\"style_ResizeComponent__3ZFN3\",\"Element\":\"style_Element__ozzJc\",\"SaveButton\":\"style_SaveButton__JfXUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__2TqBy\",\"FaceWrap\":\"style_FaceWrap__2UbCI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"style_App__196mm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__UqD-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__2KHOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"styles_Button__38X36\"};","type RequestProps = {\n  url: string;\n  method?: \"POST\" | \"GET\" | \"PUT\";\n  token?: boolean;\n  body?: object | string | number;\n  secondAttempt?: boolean;\n};\n\nexport const request = async <Response = any>({\n  url,\n  method = \"GET\",\n  body,\n  token,\n}: RequestProps): Promise<Response> => {\n  const headers: HeadersInit = {\n    \"Content-Type\": \"application/json\",\n  };\n  if (token) {\n    const savedToken = \"token\";\n    headers.Authorization = `JWT ${savedToken}`;\n  }\n  const data: RequestInit = { method, headers };\n  if (body) {\n    data.body = JSON.stringify(body);\n  }\n  console.log(url);\n  const response = await fetch(url, data);\n  if (response.ok) return (await response.json()) as Promise<Response>;\n  throw response;\n};\n","const serverUrl = \"http://localhost:5000/api/\";\r\n\r\nexport const links = {\r\n  assets: `${serverUrl}assets`,\r\n};\r\n","import { createEffect } from \"effector\";\r\nimport { request } from \"./request\";\r\nimport { links } from \"./links\";\r\nimport { IFaceCached } from \"../interfaces/types.face\";\r\n\r\nexport const getFaces = createEffect(() => {\r\n  return request<IFaceCached[]>({ url: links.assets });\r\n});\r\n\r\ngetFaces.fail.watch((e) => {\r\n  console.log(e);\r\n});\r\n","import { createEvent, createStore } from \"effector\";\r\nimport { IFace, IFaceCached } from \"../../interfaces/types.face\";\r\nimport { fromCachedFace } from \"./helpers\";\r\n\r\nexport const setFaces = createEvent<IFaceCached[]>();\r\nexport const addFace = createEvent<IFace>();\r\nexport const $faces = createStore<IFace[]>([])\r\n  .on(setFaces, (_, payload) => {\r\n    return payload.map((node) => fromCachedFace(node));\r\n  })\r\n  .on(addFace, (state, payload) => {\r\n    return [...state, payload];\r\n  });\r\n","import { INode } from \"svgson\";\r\nimport { IFace, IFaceCached } from \"../../interfaces/types.face\";\r\n\r\nexport function toIFace(node: INode): IFace {\r\n  return {\r\n    node,\r\n    offset: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    scale: 1,\r\n    rotation: 0,\r\n    uniqKey: node.attributes.uniqKey,\r\n  };\r\n}\r\n\r\nexport function toCachedFace({ node, ...rest }: IFace): IFaceCached {\r\n  return {\r\n    node: JSON.stringify(node),\r\n    ...rest,\r\n  };\r\n}\r\n\r\nexport function fromCachedFace({ node, ...rest }: IFaceCached) {\r\n  return {\r\n    node: JSON.parse(node),\r\n    ...rest,\r\n  };\r\n}\r\n","type Driver = \"text\" | \"arrayBuffer\" | \"dataUrl\" | \"binaryString\";\n\ntype ReadFileOptions<D extends Driver = Driver> = {\n  driver?: D;\n};\n\ntype ReaderResult<D extends Driver> = D extends \"arrayBuffer\"\n  ? ArrayBuffer\n  : string;\n\nconst defaultFileOptions: ReadFileOptions = {\n  driver: \"text\",\n};\n\nexport function readFile<D extends Driver = \"text\">(\n  file: File,\n  options?: ReadFileOptions<D>\n): Promise<ReaderResult<D> | null | undefined> {\n  const { driver } = { ...defaultFileOptions, ...options };\n  const fileReader = new FileReader();\n\n  function read() {\n    if (driver === \"arrayBuffer\") {\n      fileReader.readAsArrayBuffer(file);\n      return;\n    }\n    if (driver === \"binaryString\") {\n      fileReader.readAsBinaryString(file);\n      return;\n    }\n    if (driver === \"dataUrl\") {\n      fileReader.readAsDataURL(file);\n      return;\n    }\n    fileReader.readAsText(file);\n  }\n\n  return new Promise((resolve, reject) => {\n    fileReader.onloadend = (data) => {\n      resolve(data.target?.result as ReaderResult<D> | null | undefined);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n    read();\n  });\n}\n","export function replaceKey<\r\n  S extends object,\r\n  Search extends keyof S,\r\n  R extends string\r\n>(\r\n  source: S,\r\n  search: Search,\r\n  replacement: string\r\n): (Omit<S, Search> & { [key in R]: S[Search] }) | S {\r\n  if (!(search in source)) return source;\r\n  const copy = { ...source };\r\n  //@ts-ignore\r\n  copy[replacement] = copy[search] as any;\r\n  delete copy[search];\r\n  return copy;\r\n}\r\n\r\nexport function replaceKeys<S extends object, Search extends keyof S>(\r\n  source: S,\r\n  map: { [key in Search]: string }\r\n): S {\r\n  //@ts-ignore\r\n  return Object.entries(map).reduce((acc, [key, newKey]) => {\r\n    return replaceKey(acc, key as Search, newKey as string);\r\n  }, source);\r\n}\r\n","import { INode } from \"svgson\";\r\n\r\nexport function forINodeTree(handler: (node: INode) => void, node: INode) {\r\n  handler(node);\r\n  node.children = node.children.map((node) => {\r\n    return forINodeTree(handler, node);\r\n  });\r\n  return node;\r\n}\r\n","import { INode } from \"svgson\";\nimport { replaceKeys } from \"../../lib/helpers/objects\";\nimport { forINodeTree } from \"../../lib/helpers/iNode\";\nimport { nanoid } from \"nanoid\";\nimport { ColorsList } from \"./types\";\n\nfunction findColors(svgString: string): ColorsList | undefined {\n  const stylesString = svgString.match(\n    /<!\\[CDATA\\[\\s*(?:\\.fil[0-9]+ {fill:#[0-9A-F]{6}}\\s*)+/gm\n  );\n  if (!stylesString) return;\n  const colors = stylesString[0].matchAll(\n    /\\.(fil[0-9]+) {fill:(#[0-9A-F]+)}/gm\n  );\n  //@ts-ignore\n  return [...colors].map((value) => {\n    return { className: value[1], color: value[2] };\n  });\n}\n\nfunction replaceStyles(svgString: string, colors: ColorsList) {\n  const withoutStyles = svgString.replace(/<defs>[\\w\\W]+<\\/defs>/gm, \"\");\n  return colors.reduce((accum, { color, className }) => {\n    return accum.replaceAll(`class=\"${className}\"`, `fill=\"${color}\"`);\n  }, withoutStyles);\n}\n\nexport function prepareSvgColor(svgString: string) {\n  const colorsList = findColors(svgString);\n  if (!colorsList) return svgString;\n  return replaceStyles(svgString, colorsList);\n}\n\nconst convertMap = {\n  class: \"className\",\n  \"xml:space\": \"xmlSpace\",\n  \"xmlns:xlink\": \"xmlnsXlink\",\n};\n\nexport function prepareSvgJson(startNode: INode): INode {\n  return forINodeTree((node) => {\n    node.attributes = replaceKeys(node.attributes, convertMap);\n    node.attributes.uniqKey = nanoid();\n  }, startNode);\n}\n","import { attach, createEffect, createEvent, createStore } from \"effector\";\nimport { request } from \"../../api/request\";\nimport { IFace, IFaceCached } from \"../../interfaces/types.face\";\nimport { toCachedFace } from \"../faces/helpers\";\nimport { links } from \"../../api/links\";\n\nexport type IFaceCachedList = {\n  [key: string]: Partial<IFaceCached>;\n};\ntype FaceRequest = Omit<Partial<IFaceCached>, \"node\" | \"uniqKey\"> & {\n  uniqKey: IFaceCached[\"uniqKey\"];\n};\n\nexport const addNewFaceToCache = createEvent<IFace>();\nexport const addFaceUpdateToCache = createEvent<FaceRequest>();\nexport const addFaceDeleteToCache = createEvent<{\n  uniqKey: string;\n  _id?: string;\n}>();\nexport const resetCache = createEffect();\nexport const $facesCache = createStore<IFaceCachedList>({})\n  .on(addNewFaceToCache, (state, payload) => {\n    return { ...state, [payload.uniqKey]: toCachedFace(payload) };\n  })\n  .on(addFaceUpdateToCache, (state, { uniqKey, ...rest }) => {\n    if (uniqKey in state) {\n      return {\n        ...state,\n        [uniqKey]: {\n          ...state[uniqKey],\n          _delete: false,\n          ...rest,\n        },\n      };\n    }\n    if (rest._id) {\n      return {\n        ...state,\n        [uniqKey]: rest,\n      };\n    }\n    return;\n  })\n  .on(addFaceDeleteToCache, (state, { uniqKey, _id }) => {\n    if (_id) {\n      return {\n        ...state,\n        [uniqKey]: { _id, _delete: true },\n      };\n    }\n    if (uniqKey in state) {\n      const newState = { ...state };\n      delete newState[uniqKey];\n      return newState;\n    }\n  })\n  .reset(resetCache);\n\n$facesCache.watch((state) => {\n  console.log(state);\n});\n\nexport const sendCache = attach({\n  source: $facesCache,\n  mapParams: (_: void, cache) => ({ cache }),\n  effect: createEffect(({ cache }: { cache: IFaceCachedList }) => {\n    const body = Object.entries(cache).map(([_, data]) => data);\n    if (!body.length) return;\n    return request({\n      url: links.assets,\n      body,\n      method: \"PUT\",\n    });\n  }),\n});\n\nsendCache.fail.watch((e) => {\n  console.log(e);\n});\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { readFile } from \"../../../lib/asyncFileReader/readFile\";\nimport { parse } from \"svgson\";\nimport { prepareSvgJson, prepareSvgColor } from \"../helper\";\nimport classes from \"./style.module.scss\";\nimport { addNewFaceToCache } from \"../model.cache\";\nimport { toIFace } from \"../../faces/helpers\";\nimport { addFace } from \"../../faces/model.faces\";\n\nexport default function FacesDropZone() {\n  const onDrop = useCallback(async (acceptedFiles: File[]) => {\n    const svgString = await readFile(acceptedFiles[0]);\n\n    if (!svgString) return;\n    const withColors = prepareSvgColor(svgString);\n    const svgJson = await parse(withColors);\n    const preparedSvg = prepareSvgJson(svgJson);\n    const face = toIFace(preparedSvg);\n    addFace(face);\n    addNewFaceToCache(face);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div {...getRootProps()} className={classes.Container}>\n      <input {...getInputProps()} />\n      {isDragActive ? <span>Release</span> : <span>Drop face here</span>}\n    </div>\n  );\n}\n","export function getMeasure(size: number | string) {\r\n  const measure = size.toString().match(/[a-zA-Z]+$/g);\r\n  if (!measure) return \"\";\r\n  return measure[0];\r\n}\r\n\r\nexport function getValue(size: number | string) {\r\n  const value = size.toString().replaceAll(/[^0-9.]/g, \"\");\r\n  return +value;\r\n}\r\n","import React, { SVGProps } from \"react\";\nimport { INode } from \"svgson\";\nimport { SvgNode } from \"../facesBuildZone/types\";\nimport { getMeasure, getValue } from \"../../lib/helpers/getMeasure\";\n\ntype SvgBuilderProps = {\n  node: SvgNode | INode;\n  childNode?: boolean;\n} & SVGProps<SVGSVGElement | SVGPathElement>;\n\nconst SvgBuilder = React.memo(\n  ({ node, childNode, ...svgProps }: SvgBuilderProps) => {\n    const { style, uniqKey, ...props } = node.attributes;\n    const sizes = (() => {\n      if (childNode) return {};\n      if (!props.width || !props.height) return {};\n      return {\n        width: getValue(props.width) / 4 + getMeasure(props.width),\n        height: getValue(props.height) / 4 + getMeasure(props.height),\n      };\n    })();\n\n    return React.createElement<SVGProps<SVGSVGElement | SVGPathElement>>(\n      node.name,\n      { ...svgProps, ...props, ...sizes },\n      node.children\n        .filter(({ type }) => type === \"element\")\n        .map((childNode) => {\n          return (\n            <SvgBuilder\n              childNode\n              node={childNode}\n              key={childNode.attributes.uniqKey}\n            />\n          );\n        })\n    );\n  },\n  (prev, next) => {\n    return prev.node.attributes.uniqKey === next.node.attributes.uniqKey;\n  }\n);\n\nexport default SvgBuilder;\n","import React from \"react\";\r\nimport classes from \"./styles.module.scss\";\r\nimport cx from \"classnames\";\r\n\r\nexport type ButtonProps = {\r\n  onClick: () => void;\r\n  label: string;\r\n  className?: string;\r\n};\r\n\r\nexport default function Button({ label, onClick, className }: ButtonProps) {\r\n  return (\r\n    <button className={cx(classes.Button, className)} onClick={onClick}>\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport SvgBuilder from \"../../svgBuilder/SvgBuilder\";\nimport Draggable, { DraggableData } from \"react-draggable\";\nimport classes from \"./style.module.scss\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport { addFaceUpdateToCache, sendCache } from \"../model.cache\";\nimport { IFaceLocation } from \"../../../interfaces/types.face\";\nimport { useStore } from \"effector-react\";\nimport { $faces } from \"../../faces/model.faces\";\nimport Button from \"../../../ui/buttons/Button\";\n\nexport default function FacesBuildZone() {\n  const faces = useStore($faces);\n  const [isScaleBlocked, setIsScaleBlocked] = useState(false);\n  const [currentScale, setCurrentScale] = useState(1);\n\n  function onMoveStop(\n    { _id, uniqKey }: IFaceLocation,\n    { x, y }: DraggableData\n  ) {\n    setIsScaleBlocked(false);\n    addFaceUpdateToCache({\n      uniqKey,\n      _id,\n      offset: { x, y },\n    });\n  }\n\n  return (\n    <div className={classes.Container}>\n      <Button\n        onClick={sendCache}\n        label={\"Save\"}\n        className={classes.SaveButton}\n      />\n      <TransformWrapper\n        disabled={isScaleBlocked}\n        minScale={0.1}\n        limitToBounds={false}\n        onZoomStop={({ state: { scale } }) => {\n          setCurrentScale(scale);\n        }}\n      >\n        <TransformComponent wrapperClass={classes.ResizeComponent}>\n          {faces.map(({ node, offset, uniqKey, _id }) => {\n            return (\n              <Draggable\n                onStart={() => setIsScaleBlocked(true)}\n                onStop={(_, data) => onMoveStop({ uniqKey, _id }, data)}\n                key={uniqKey}\n                defaultPosition={offset}\n                scale={currentScale}\n              >\n                <div>\n                  <SvgBuilder node={node} className={classes.Element} />\n                </div>\n              </Draggable>\n            );\n          })}\n        </TransformComponent>\n      </TransformWrapper>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport classes from \"./style.module.scss\";\r\nimport FacesDropZone from \"../../features/facesBuildZone/DropZone/FacesDropZone\";\r\nimport FacesBuildZone from \"../../features/facesBuildZone/BuildZone/FacesBuildZone\";\r\n\r\nexport default function AdminPage() {\r\n  return (\r\n    <div className={classes.Container}>\r\n      <FacesDropZone />\r\n      <FacesBuildZone />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { TransformComponent, TransformWrapper } from \"react-zoom-pan-pinch\";\nimport classes from \"./style.module.scss\";\nimport SvgBuilder from \"../svgBuilder/SvgBuilder\";\nimport { useStore } from \"effector-react\";\nimport { $faces } from \"../faces/model.faces\";\n\nexport default function FacesShowZone() {\n  const faces = useStore($faces);\n\n  return (\n    <div className={classes.Container}>\n      <TransformWrapper\n        initialScale={0.5}\n        centerOnInit\n        centerZoomedOut\n        minScale={0.05}\n        limitToBounds={false}\n      >\n        <TransformComponent wrapperClass={classes.FaceWrap}>\n          {faces.map(({ node, offset, uniqKey, _id }) => {\n            const style = {\n              transform: `translateX(${offset.x}px) translateY(${offset.y}px)`,\n            };\n            return <SvgBuilder node={node} style={style} key={uniqKey} />;\n          })}\n        </TransformComponent>\n      </TransformWrapper>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport FacesShowZone from \"../features/showZone/FacesShowZone\";\r\n\r\nexport default function MainPage() {\r\n  return (\r\n    <div>\r\n      <FacesShowZone />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport classes from \"./style.module.scss\";\nimport { useFacesInit } from \"./features/faces/hook\";\nimport { Switch, useLocation, Route } from \"react-router-dom\";\nimport AdminPage from \"./pages/AdminPage/AdminPage\";\nimport MainPage from \"./pages/MainPage\";\n\nfunction App() {\n  const location = useLocation();\n\n  useFacesInit();\n\n  return (\n    <div className={classes.App}>\n      <Switch location={location}>\n        <Route path={\"/\"} exact>\n          <MainPage />\n        </Route>\n        <Route path={\"/admin\"}>\n          <AdminPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\r\nimport { getFaces } from \"../../api/request.getFaces\";\r\nimport { setFaces } from \"./model.faces\";\r\n\r\nexport function useFacesInit() {\r\n  useEffect(() => {\r\n    getFaces()\r\n      .then((data) => {\r\n        console.log(data);\r\n        setFaces(data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}